---
- name: Install
  hosts: all

  vars:
    pgadmin_password: "changeme"
    pgadmin_username: "coetzeer@gmail.com"
    pgadmin_db_username: pgadmin
    pgadmin_db_password: pgadmin
    pgadmin_install_dir: "/usr/local/pgadmin4/lib/python2.7/site-packages/pgadmin4"

  tasks:
    - name: "Install packages from pkg"
      pkgng:
        name: "{{item}}"
        state: present
      with_items:
      - postgresql96-client
      - postgresql96-server
      - py27-pip
      - py27-virtualenv
      - wget
      - py27-sqlite3
      - rinetd
      - ca_root_nss

    - name: Pip install into system python
      pip:
        name: "{{item}}"
      with_items:
        - psycopg2
        - pexpect

    - name: Enable the postgres service
      shell: "sysrc postgresql_enable=yes"

    - name: Intialize the database
      shell: service postgresql initdb
      args:
        creates: "/var/db/postgres/data96"

    - name: Start the db
      service:
        name: postgresql
        state: started
        enabled: yes

    - lineinfile:
        path: /var/db/postgres/data96/postgresql.conf
        regexp: '^listen_addresses '
        insertafter: '^#listen_addresses '
        line: "listen_addresses = '*'"

    - lineinfile:
        path: /var/db/postgres/data96/pg_hba.conf
        line: "host    all             all             0.0.0.0/0               md5"

    - name: Start the db
      service:
        name: postgresql
        state: restarted
        enabled: yes

    - postgresql_db:
        name: pgadmin

    - postgresql_user:
        db: pgadmin
        name: "{{pgadmin_db_username}}"
        password: "{{pgadmin_db_password}}"
        role_attr_flags: CREATEDB,SUPERUSER,CREATEROLE

    - name: create the pgadmin virtualenv
      shell: virtualenv pgadmin4
      args:
        chdir: /usr/local/
        creates: "/usr/local/pgadmin4"

    - pip:
        name: "{{item}}"
        virtualenv: "/usr/local/pgadmin4"
      with_items:
        - cryptography
        - pyopenssl
        - ndg-httpsclient
        - pyasn1

    - name: download pgadmin
      shell: wget --no-check-certificate https://ftp.postgresql.org/pub/pgadmin/pgadmin4/v3.0/pip/pgadmin4-3.0-py2.py3-none-any.whl
      args:
        chdir: /usr/local/pgadmin4
        creates: "/usr/local/pgadmin4/pgadmin4-3.0-py2.py3-none-any.whl"

    - pip:
        name: file:///usr/local/pgadmin4/pgadmin4-3.0-py2.py3-none-any.whl
        virtualenv: "/usr/local/pgadmin4"

    - file:
        path: /var/lib/pgadmin
        state: directory

    - name: initialize pgadmin
      expect:
        command: bin/python2.7 lib/python2.7/site-packages/pgadmin4/setup.py
        chdir: /usr/local/pgadmin4
        creates: "/var/lib/pgadmin/storage"
        responses:
          "Email address:": "{{pgadmin_username}}"
          "Password:": "{{pgadmin_password}}"
          "Retype password:": "{{pgadmin_password}}"

    - name: Create the local config
      shell: "cp config.py config_local.py"
      args:
        chdir: "{{pgadmin_install_dir}}"
        creates: "{{pgadmin_install_dir}}/config_local.py"

    - lineinfile:
        path: "{{pgadmin_install_dir}}/config_local.py"
        regexp: '^DEFAULT_SERVER ='
        line: "DEFAULT_SERVER = '0.0.0.0'"

    - lineinfile:
        path: "{{pgadmin_install_dir}}/config_local.py"
        regexp: '^DEFAULT_SERVER_PORT ='
        line: "DEFAULT_SERVER_PORT = 5050"

    - name: Enable the rinetd service
      shell: "sysrc rinetd_enable=YES"

    - lineinfile:
        path: /usr/local/etc/rinetd.conf
        regexp: '.*5050$'
        line: "{{ansible_default_ipv4.address}} 80 {{ansible_default_ipv4.address}} 5050"
        create: True

    - lineinfile:
        path: /usr/local/etc/rinetd.conf
        line: "logfile /var/log/rinetd.log"

    - lineinfile:
        path: /usr/local/etc/rinetd.conf
        line: "logcommon"

    - name: Start the rinetd daemon
      service:
        name: rinetd
        state: started
        enabled: yes

    - template:
        src: service.j2
        dest: /usr/local/etc/rc.d/pgadmin
        owner: root
        group: wheel
        mode: "u=rwx,g=r,o=r"

    - name: Enable the pgadmin service
      shell: "sysrc pgadmin_enable=YES"

    - name: Start the pgadmin daemon
      service:
        name: pgadmin
        state: started
        enabled: yes
